// <auto-generated />
using System;
using BTMobile.Business.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BTMobile.Business.Migrations
{
    [DbContext(typeof(BTMobileContext))]
    [Migration("20181203035012_CriarEstruturaBanco")]
    partial class CriarEstruturaBanco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BTMobile.Business.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Ativo");

                    b.Property<int?>("ClienteId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.ExercicioSerie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Carga");

                    b.Property<int?>("ExercicioId");

                    b.Property<int>("Ordem");

                    b.Property<string>("Repeticao");

                    b.Property<int?>("SerieFichaId");

                    b.HasKey("Id");

                    b.HasIndex("ExercicioId");

                    b.HasIndex("SerieFichaId");

                    b.ToTable("ExerciciosSerie");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.Ficha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId");

                    b.Property<DateTime>("DataCriacao");

                    b.Property<int?>("ProfessorId");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Fichas");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.HistoricoAlteracaoCarga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHoraAlteracao");

                    b.Property<int?>("ExercicioSerieId");

                    b.Property<double>("NovaCarga");

                    b.HasKey("Id");

                    b.HasIndex("ExercicioSerieId");

                    b.ToTable("HistoricoAlteracaoCarga");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.HistoricoExecucaoSerie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHoraExecucao");

                    b.Property<int?>("SerieFichaId");

                    b.HasKey("Id");

                    b.HasIndex("SerieFichaId");

                    b.ToTable("HistoricoExecucaoSerie");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.SerieFicha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FichaId");

                    b.Property<string>("RotuloSerie");

                    b.HasKey("Id");

                    b.HasIndex("FichaId");

                    b.ToTable("SeriesFicha");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.Contrato", b =>
                {
                    b.HasOne("BTMobile.Business.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.ExercicioSerie", b =>
                {
                    b.HasOne("BTMobile.Business.Entities.Exercicio", "Exercicio")
                        .WithMany("ExerciciosSerie")
                        .HasForeignKey("ExercicioId");

                    b.HasOne("BTMobile.Business.Entities.SerieFicha", "SerieFicha")
                        .WithMany("ExerciciosSerie")
                        .HasForeignKey("SerieFichaId");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.Ficha", b =>
                {
                    b.HasOne("BTMobile.Business.Entities.Cliente", "Cliente")
                        .WithMany("Fichas")
                        .HasForeignKey("ClienteId");

                    b.HasOne("BTMobile.Business.Entities.Professor", "Professor")
                        .WithMany("Fichas")
                        .HasForeignKey("ProfessorId");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.HistoricoAlteracaoCarga", b =>
                {
                    b.HasOne("BTMobile.Business.Entities.ExercicioSerie", "ExercicioSerie")
                        .WithMany()
                        .HasForeignKey("ExercicioSerieId");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.HistoricoExecucaoSerie", b =>
                {
                    b.HasOne("BTMobile.Business.Entities.SerieFicha", "SerieFicha")
                        .WithMany("HistoricoExecucaoSerie")
                        .HasForeignKey("SerieFichaId");
                });

            modelBuilder.Entity("BTMobile.Business.Entities.SerieFicha", b =>
                {
                    b.HasOne("BTMobile.Business.Entities.Ficha", "Ficha")
                        .WithMany("Series")
                        .HasForeignKey("FichaId");
                });
#pragma warning restore 612, 618
        }
    }
}
